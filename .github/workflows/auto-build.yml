name: Build project

on:
  push:
    branches: [ main ]

  schedule:
  - cron: "0 5 * * wed"
  
  workflow_dispatch:

jobs:
  linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
    - name: Check out scripts
      uses: actions/checkout@v2
      
    - name: Download tags
      run: git fetch --prune --unshallow

    - name: Show available storage
      shell: bash
      run: df -h
      
      # This cleans up some space that we might need, maybe in the future more is required as chromium gets larger
    - name: Free up some disk space
      run: sudo rm -rf /usr/share/dotnet
    
    - name: Show available storage
      shell: bash
      run: df -h

    - name: Download last release hashes
      shell: bash
      run: curl -L "https://github.com/$GITHUB_REPOSITORY/releases/latest/download/SHA256SUMS" > SHA256SUMS || true
      working-directory: linux
      
    - name: Runnning build/generation script
      shell: bash
      run: |
        sudo bash ./generate_everything.sh
      working-directory: linux

    - uses: actions/upload-artifact@v2
      with:
        name: linux-zip
        path: linux/subresource_filter_tools_linux-x64.zip

    - uses: actions/upload-artifact@v2
      with:
        name: SHA256SUMS-linux
        path: linux/SHA256SUMS

    - uses: actions/upload-artifact@v2
      with:
        name: releasemd-linux
        path: linux/release.md
  
    - name: List chromium output directory
      shell: bash
      run: sudo find chromium/src/out
      if: always()
      working-directory: linux
      continue-on-error: true

    - name: Show available storage
      shell: bash
      run: df -h
      if: always()


  windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Show disk usage
        run: fsutil volume diskfree ((get-location).Drive.Name + ":")
        
      - name: Show all disks
        run: Get-PSDrive
        
      # Install "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" and set it up as described in the "Setting up Windows" section
      - name: Install Visual Studio Community 2019 Build Tools
        continue-on-error: true
        run: |
          choco install visualstudio2019community --package-parameters "--add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.VC.ATLMFC --includeRecommended --includeOptional --passive --locale en-US"
     
      - name: Upload chocolately log file
        uses: actions/upload-artifact@v2
        with:
          name: chocolatey-install-logs
          path: C:\ProgramData\chocolatey\logs\chocolatey.log
        if: ${{ always() }}

      - name: Show disk usage
        run: fsutil volume diskfree ((get-location).Drive.Name + ":")

      - name: Run build script
        run: .\build_windows.ps1
        working-directory: windows

      - name: Show disk usage
        run: fsutil volume diskfree ((get-location).Drive.Name + ":")
        if: ${{ always() }}
        
      - name: Show all disks
        run: Get-PSDrive
        if: ${{ always() }}
        
      - uses: actions/upload-artifact@v2
        with:
          name: windows-zip
          path: windows/subresource_filter_tools_windows-x64.zip

  release:
    name: Release
    needs: [linux, windows]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: linux-zip
      
      - uses: actions/download-artifact@v2
        with:
          name: SHA256SUMS-linux

      - uses: actions/download-artifact@v2
        with:
          name: releasemd-linux
      
      - uses: actions/download-artifact@v2
        with:
          name: windows-zip

      - name: Display structure of downloaded files
        run: ls -R

      - name: Generate tag name
        run: echo "TAG_NAME=$(date +%F-%H-%M)" >> $GITHUB_ENV    

      # Theoretically release this now
