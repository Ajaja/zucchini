name: Build project

on:
  push:

  schedule:
  - cron: "0 5 * * wed"
  
  workflow_dispatch:

jobs:
  linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
    - name: Check out scripts
      uses: actions/checkout@v2
      
    - name: Download tags
      run: git fetch --prune --unshallow

    - name: Show available storage
      shell: bash
      run: df -h
      
      # This cleans up some space that we might need, maybe in the future more is required as chromium gets larger
    - name: Free up some disk space
      run: sudo rm -rf /usr/share/dotnet
    
    - name: Show available storage
      shell: bash
      run: df -h
      
    - name: Runnning build/generation script
      shell: bash
      run: |
        sudo bash ./generate_everything.sh
      working-directory: linux

    - uses: actions/upload-artifact@v2
      with:
        name: linux-zip
        path: linux/subresource_filter_tools_linux-x64.zip

    - uses: actions/upload-artifact@v2
      with:
        name: SHA256SUMS-linux
        path: linux/SHA256SUMS

    - name: List chromium output directory
      shell: bash
      run: sudo find chromium/src/out
      if: always()
      working-directory: linux
      continue-on-error: true

    - name: Show available storage
      shell: bash
      run: df -h
      if: always()

  release:
    name: Release
    needs: [ linux ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: linux-zip
      
      - uses: actions/download-artifact@v2
        with:
          name: SHA256SUMS-linux

      - name: Display structure of downloaded files
        run: ls -R

      - name: Display downloaded zip contents
        run: find . -maxdepth 1 -name "*.zip" -exec unzip -l {} \;

      - name: Generate release info
        run: |
          bash other/release_info.sh > release.md
          echo "Generated output file:"
          cat release.md

      - name: Generate tag name
        run: echo "TAG_NAME=$(date +%F-%H-%M)" >> $GITHUB_ENV    

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
              subresource_filter_tools_linux-x64.zip
              SHA256SUMS
          tag_name: ${{ env.TAG_NAME }}
          name: "Automated build for Linux"
          fail_on_unmatched_files: true
          body_path: release.md
          draft: ${{ env.BRANCH_NAME != 'main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Delete older releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 7
          delete_tags: true
          delete_tag_pattern: "-"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.BRANCH_NAME == 'main' }}
